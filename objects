var obj={fn:"Sneha"}

obj.age=20;
obj["salary"]=400;

console.log(obj)

for(var key in obj)
console.log(key+" : "+obj[key])

Ans::
  { fn: 'Sneha', age: 20, salary: 400 }
  
fn : Sneha
age : 20
salary : 400

2nd eg:
var person={fn:"Tony",ln:"Stark",
    marks:{maths:80,sci:45}
}

person.age=20;
person["salary"]=400;

console.log(person)
var sub="maths"
console.log(`${person.fn} ${person.ln}'s ${sub} mark
is ${person.marks[sub]} `)
 
note:
**in square brackets we can't directly use the keyword
** we have to place the variable name in the square brackets
   which is already declared (dynamic values) (or)
 place the keyword within the single or double quotes
ans::
 {
  fn: 'Tony',
  ln: 'Stark',
  marks: { math: 80, sci: 45 },
  age: 20,
  salary: 400
}

Tony Stark's maths mark is 80 


console.log(Object.keys(person))
console.log(Object.values(person))
ans::[ 'fn', 'ln', 'marks', 'age', 'salary' ]
[ 'Tony', 'Stark', { maths: 80, sci: 45 }, 20, 400 ]











-----------------------------------

map-->(return keyword must)
/*
map create a array with same type we is not manadatory to declare a array at the beginning

*/
eg:
const arr=[1,2,3,4,5]

const res=arr.map((i)=>{
    return i*2
})

console.log(res)
ans::
[ 2, 4, 6, 8, 10 ]

-------------------------------------------
forEach loop
eg:
const arr=[2,3,4,5]
 const res=[]---> we have to declare a array variable it is mandatory
arr.forEach((i)=>{
    res.push(i*2 +1)// i*2
})

console.log(res)

ans::
[ 5, 7, 9, 11 ]
